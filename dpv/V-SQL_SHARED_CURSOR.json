[ [ "SQL_ID", "VARCHAR2(13)", "<p>SQL identifier</p>" ], [ "ADDRESS", "RAW(4 | 8)", "<p>Address of the parent cursor</p>" ], [ "CHILD_ADDRESS", "RAW(4 | 8)", "<p>Address of the child cursor</p>" ], [ "CHILD_NUMBER", "NUMBER", "<p>Child number</p>" ], [ "UNBOUND_CURSOR", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The existing child cursor was not fully built (in other words, it was not optimized)</p>" ], [ "SQL_TYPE_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The SQL type does not match the existing child cursor</p>" ], [ "OPTIMIZER_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The optimizer environment does not match the existing child cursor</p>" ], [ "OUTLINE_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The outlines do not match the existing child cursor</p>" ], [ "STATS_ROW_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The existing statistics do not match the existing child cursor</p>" ], [ "LITERAL_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Non-data literal values do not match the existing child cursor</p>" ], [ "FORCE_HARD_PARSE", "VARCHAR2(1)", "<p>(<code>Y|N</code>) For internal use</p>" ], [ "EXPLAIN_PLAN_CURSOR", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The child cursor is an explain plan cursor and should not be shared</p>" ], [ "BUFFERED_DML_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Buffered DML does not match the existing child cursor</p>" ], [ "PDML_ENV_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) PDML environment does not match the existing child cursor</p>" ], [ "INST_DRTLD_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Insert direct load does not match the existing child cursor</p>" ], [ "SLAVE_QC_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The existing child cursor is a slave cursor and the new one was issued by the coordinator (or, the existing child cursor was issued by the coordinator and the new one is a slave cursor)</p>" ], [ "TYPECHECK_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The existing child cursor is not fully optimized</p>" ], [ "AUTH_CHECK_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Authorization/translation check failed for the existing child cursor</p>" ], [ "BIND_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The bind metadata does not match the existing child cursor</p>" ], [ "DESCRIBE_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The typecheck heap is not present during the describe for the child cursor</p>" ], [ "LANGUAGE_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The language handle does not match the existing child cursor</p>" ], [ "TRANSLATION_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The base objects of the existing child cursor do not match</p>" ], [ "BIND_EQUIV_FAILURE", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The bind value's selectivity does not match that used to optimize the existing child cursor</p>" ], [ "INSUFF_PRIVS", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Insufficient privileges on objects referenced by the existing child cursor</p>" ], [ "INSUFF_PRIVS_REM", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Insufficient privileges on remote objects referenced by the existing child cursor</p>" ], [ "REMOTE_TRANS_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) The remote base objects of the existing child cursor do not match</p>" ], [ "LOGMINER_SESSION_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) LogMiner Session parameters mismatch</p>" ], [ "INCOMP_LTRL_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor might have some binds (literals) which may be unsafe/non-data. Value mismatch.</p>" ], [ "OVERLAP_TIME_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Mismatch caused by setting session parameter <code>ERROR_ON_OVERLAP_TIME</code></p>" ], [ "EDITION_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor edition mismatch</p>" ], [ "MV_QUERY_GEN_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Internal, used to force a hard-parse when analyzing materialized view queries</p>" ], [ "USER_BIND_PEEK_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor is not shared because value of one or more user binds is different and this has a potential to change the execution plan</p>" ], [ "TYPCHK_DEP_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor has typecheck dependencies</p>" ], [ "NO_TRIGGER_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor and child have no trigger mismatch</p>" ], [ "FLASHBACK_CURSOR", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor non-shareability due to flashback</p>" ], [ "ANYDATA_TRANSFORMATION", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Is criteria for opaque type transformation and does not match</p>" ], [ "PDDL_ENV_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y</code>|<code>N</code>) Environment setting mismatch for parallel DDL cursor (that is, one or more of the following parameter values have changed: <code>PARALLEL_EXECUTION_ENABLED</code>, <code>PARALLEL_DDL_MODE</code>, <code>PARALLEL_DDL_FORCED_DEGREE</code>, or <code>PARALLEL_DDL_FORCED_INSTANCES</code>)</p>" ], [ "TOP_LEVEL_RPI_CURSOR", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Is top level RPI cursor</p>" ], [ "DIFFERENT_LONG_LENGTH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Value of <code>LONG</code> does not match</p>" ], [ "LOGICAL_STANDBY_APPLY", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Logical standby apply context does not match</p>" ], [ "DIFF_CALL_DURN", "VARCHAR2(1)", "<p>(<code>Y|N</code>) If Slave SQL cursor/single call</p>" ], [ "BIND_UACS_DIFF", "VARCHAR2(1)", "<p>(<code>Y|N</code>) One cursor has bind UACs and one does not</p>" ], [ "PLSQL_CMP_SWITCHS_DIFF", "VARCHAR2(1)", "<p>(<code>Y|N</code>) PL/SQL anonymous block compiled with different PL/SQL compiler switches</p>" ], [ "CURSOR_PARTS_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor was compiled with subexecution (cursor parts were executed)</p>" ], [ "STB_OBJECT_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) STB is an internal name for a SQL Management Object Mismatch. A SQL Management Object Mismatch means that either a SQL plan baseline, or a SQL profile, or a SQL patch has been created for your SQL statement between the executions. Because a cursor is a read-only entity, a hard parse is forced to be able to create a new cursor that contains information about the new SQL management object related to this SQL statement.</p>" ], [ "CROSSEDITION_TRIGGER_MISMATCH</code></p>\n</td>\n<td class=\"cellalignment3905\" headers=\"d2059589e867 d2059589e171\">\n<p>VARCHAR2(1)</p>\n</td>\n<td class=\"cellalignment3908\" headers=\"d2059589e867 d2059589e174\">\n<p>(<code>Y|N</code>) The set of crossedition triggers to execute might differ</p>\n</td>\n</tr>\n<tr>\n<td class=\"cellalignment3904\" id=\"d2059589e881\" headers=\"d2059589e168\">\n<p><code>PQ_SLAVE_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Top-level slave decides not to share cursor</p>" ], [ "TOP_LEVEL_DDL_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Is top-level DDL cursor</p>" ], [ "MULTI_PX_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor has multiple parallelizers and is slave-compiled</p>" ], [ "BIND_PEEKED_PQ_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor based around bind peeked values</p>" ], [ "MV_REWRITE_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor needs recompilation because an SCN was used during compile time due to being rewritten by materialized view</p>" ], [ "ROLL_INVALID_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Marked for rolling invalidation and invalidation window exceeded</p>" ], [ "OPTIMIZER_MODE_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Parameter <code>OPTIMIZER_MODE</code> mismatch (for example, all_rows versus first_rows_1)</p>" ], [ "PX_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Mismatch in one parameter affecting the parallelization of a SQL statement. For example, one cursor was compiled with parallel DML enabled while the other was not.</p>" ], [ "MV_STALEOBJ_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor cannot be shared because there is a mismatch in the list of materialized views which were stale when the cursor was built</p>" ], [ "FLASHBACK_TABLE_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cursor cannot be shared because there is a mismatch with triggers being enabled and/or referential integrity constraints being deferred</p>" ], [ "LITREP_COMP_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Mismatch in use of literal replacement</p>" ], [ "PLSQL_DEBUG", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Value of the <code>PLSQL_DEBUG</code> parameter for the current session does not match the value used to build the cursor</p>" ], [ "LOAD_OPTIMIZER_STATS", "VARCHAR2(1)", "<p>(<code>Y|N</code>) A hard parse is forced to initialize extended cursor sharing</p>" ], [ "ACL_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Cached ACL evaluation result stored in the child cursor is not valid for the current session or user</p>" ], [ "FLASHBACK_ARCHIVE_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Value of the <code>FLASHBACK_DATA_ARCHIVE_INTERNAL_CURSOR</code> parameter for the current session does not match the value used to build the cursor</p>" ], [ "LOCK_USER_SCHEMA_FAILED", "VARCHAR2(1)", "<p>(<code>Y|N</code>) User or schema used to build the cursor no longer exists</p>\n<p><span class=\"bold\">Note:</span> This sharing criterion is deprecated</p>" ], [ "REMOTE_MAPPING_MISMATCH", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Reloaded cursor was previously remote-mapped and is currently not remote-mapped. Therefore, the cursor must be reparsed.</p>" ], [ "LOAD_RUNTIME_HEAP_FAILED", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Loading of run-time heap for the new cursor (or reload of aged out cursor) failed</p>" ], [ "HASH_MATCH_FAILED", "VARCHAR2(1)", "<p>(<code>Y|N</code>) No existing child cursors have the unsafe literal bind hash values required by the current cursor</p>" ], [ "PURGED_CURSOR", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Child cursor is marked for purging</p>" ], [ "BIND_LENGTH_UPGRADEABLE", "VARCHAR2(1)", "<p>(<code>Y|N</code>) Bind length(s) required for the current cursor are longer than the bind length(s) used to build the child cursor</p>" ], [ "USE_FEEDBACK_STATS", "VARCHAR2(1)", "<p>(<code>Y|N</code>) A hard parse is forced so that the optimizer can reoptimize the query with improved optimizer inputs (for example, cardinality estimates)</p>" ], [ "REASON", "CLOB", "<p>Child number, id, and reason the cursor is not shared. The content of this column is structured using XML.</p>" ], [ "CON_ID", "NUMBER", "<p>The ID of the container to which the data pertains. Possible values include:</p>\n<ul style=\"list-style-type: disc;\">\n<li>\n<p><code>0</code>: This value is used for rows containing data that pertain to the entire CDB. This value is also used for rows in non-CDBs.</p>\n</li>\n<li>\n<p><code>1</code>: This value is used for rows containing data that pertain to only the root</p>\n</li>\n<li>\n<p><span class=\"italic\">n</span>: Where <span class=\"italic\">n</span> is the applicable container ID for the rows containing data</p>\n</li>\n</ul>" ] ]